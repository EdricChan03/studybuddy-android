[versions]
accompanist = "0.30.1"
# 2.0.3 requires Android U APIs - see
# https://github.com/google/desugar_jdk_libs/blob/master/CHANGELOG.md#version-203-2023-03-29
#noinspection GradleDependency
android-desugar = "2.0.2"
android-gradle = "8.2.0-alpha15"
androidx-lifecycle = "2.7.0-alpha01"
compose = "1.6.0-alpha03"
compose-material3 = "1.2.0-alpha05"
dagger = "2.47"
deep-link-dispatch = "6.2.2"
firebase-bom = "32.2.2"
gradle-versions = "0.47.0"
kotest = "5.6.2"
kotlin = "1.9.0"
kotlinx-coroutines = "1.7.3"
kotlinx-serialization = "1.5.1"
ktor = "2.3.3"
markwon = "4.6.2"
mockk = "1.13.5"

[libraries]
# AndroidX dependencies
androidx-annotation = "androidx.annotation:annotation:1.6.0"
androidx-appcompat = "androidx.appcompat:appcompat:1.7.0-alpha03"
androidx-browser = "androidx.browser:browser:1.6.0"
androidx-constraintlayout = "androidx.constraintlayout:constraintlayout:2.2.0-alpha12"
androidx-core-ktx = "androidx.core:core-ktx:1.10.1"
androidx-fragment-ktx = "androidx.fragment:fragment-ktx:1.6.1"
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-preference-ktx = "androidx.preference:preference-ktx:1.2.1"
androidx-recyclerview-core = "androidx.recyclerview:recyclerview:1.3.1"
androidx-recyclerview-selection = "androidx.recyclerview:recyclerview-selection:1.2.0-alpha01"
androidx-swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01"
androidx-work-runtime-ktx = "androidx.work:work-runtime-ktx:2.9.0-alpha02"

# Jetpack Compose
androidx-compose-animation = { module = "androidx.compose.animation:animation", version.ref = "compose" }
androidx-compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "compose" }

androidxtra-browser-ktx = "io.github.edricchan03.androidx.browser:browser-ktx:0.1.0"

# Accompanist
accompanist-material3-themeAdapter = { module = "com.google.accompanist:accompanist-themeadapter-material3", version.ref = "accompanist" }
accompanist-drawablePainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }
accompanist-systemUiController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }

# Other dependencies

materialComponents = "com.google.android.material:material:1.9.0"

# DeepLinkDispatcher
deepLinkDispatch-core = { module = "com.airbnb:deeplinkdispatch", version.ref = "deep-link-dispatch" }
deepLinkDispatch-processor = { module = "com.airbnb:deeplinkdispatch-processor", version.ref = "deep-link-dispatch" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-analytics-ktx = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-auth-ktx = { module = "com.google.firebase:firebase-auth-ktx" }
playServices-auth = "com.google.android.gms:play-services-auth:20.6.0"
firebase-crashlytics-ktx = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-dynamicLinks-ktx = { module = "com.google.firebase:firebase-dynamic-links-ktx" }
firebase-firestore-ktx = { module = "com.google.firebase:firebase-firestore-ktx" }
firebase-installations-ktx = { module = "com.google.firebase:firebase-installations-ktx" }
firebase-messaging-ktx = { module = "com.google.firebase:firebase-messaging-ktx" }
firebase-perf-ktx = { module = "com.google.firebase:firebase-perf-ktx" }

# Kotlin
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }

# Google Play Services OSS Licenses
playServices-ossLicenses-core = "com.google.android.gms:play-services-oss-licenses:17.0.1"
# (The following line is still needed as there is no plugin marker available as of yet)
playServices-ossLicenses-gradle = "com.google.android.gms:oss-licenses-plugin:0.10.6"

# Markwon
markwon-core = { module = "io.noties.markwon:core", version.ref = "markwon" }
markwon-editor = { module = "io.noties.markwon:editor", version.ref = "markwon" }
markwon-html = { module = "io.noties.markwon:html", version.ref = "markwon" }
markwon-imageCoil = { module = "io.noties.markwon:image-coil", version.ref = "markwon" }
markwon-linkify = { module = "io.noties.markwon:linkify", version.ref = "markwon" }
markwon-syntaxHighlight = { module = "io.noties.markwon:syntax-highlight", version.ref = "markwon" }
markwon-ext-strikethrough = { module = "io.noties.markwon:ext-strikethrough", version.ref = "markwon" }
markwon-ext-tables = { module = "io.noties.markwon:ext-tables", version.ref = "markwon" }
markwon-ext-tasklist = { module = "io.noties.markwon:ext-tasklist", version.ref = "markwon" }

# I/O Dependencies

# Coil
coil = "io.coil-kt:coil:2.4.0"

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# kotlinx-serialization
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Miscellaneous

materialAbout = "com.github.daniel-stoneuk:material-about-library:3.2.0-rc01"
# TODO: Switch to an in-house updater
appUpdater = "com.github.AleP04:AppUpdater:2.7.2"
imagePicker = "com.github.esafirm:android-image-picker:3.0.0"
migration = "io.github.boswelja.migration:migration-core:2.1.4"

# Gradle Versions (declared here as a library and not as a plugin
# such that it can be used in a custom reporter)
gradleVersions-gradle = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradle-versions" }

# AGP (as a library such that it can be used in precompiled scripts)
android-gradle-library = { module = "com.android.library:com.android.library.gradle.plugin", version.ref = "android-gradle" }

# Kotlin Gradle plugin
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

# Testing dependencies
androidx-test-espresso-core = "androidx.test.espresso:espresso-core:3.5.1"
androidx-test-core = "androidx.test:core:1.5.0"
androidx-test-ext = "androidx.test.ext:junit:1.1.5"
androidx-test-runner = "androidx.test:runner:1.5.2"
androidx-test-rules = "androidx.test:rules:1.5.0"
junit = "junit:junit:4.13.2"
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
mockito-core = "org.mockito:mockito-core:5.4.0"
mockk-core = { module = "io.mockk:mockk", version.ref = "mockk" }

kotest-assertion-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }

# DI dependencies
dagger-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
dagger-hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "dagger" }

android-desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugar" }
android-desugar-nio = { module = "com.android.tools:desugar_jdk_libs_nio", version.ref = "android-desugar" }

[bundles]
androidx-compose = [
  "androidx-compose-animation",
  "androidx-compose-foundation",
  "androidx-compose-ui",
  "androidx-compose-ui-tooling-preview",
  "androidx-compose-material3"
]

androidx-compose-tooling = [
  "androidx-compose-ui-test-manifest",
  "androidx-compose-ui-tooling"
]

androidx-test = [
  "androidx-test-espresso-core", "androidx-test-core",
  "androidx-test-runner", "androidx-test-rules"
]

firebase = [
  "firebase-analytics-ktx", "firebase-auth-ktx", "playServices-auth",
  "firebase-crashlytics-ktx", "firebase-dynamicLinks-ktx", "firebase-firestore-ktx",
  "firebase-installations-ktx", "firebase-messaging-ktx", "firebase-perf-ktx"
]

ktor = [
  "ktor-client-core", "ktor-client-content-negotiation", "ktor-client-okhttp",
  "ktor-serialization-kotlinx-json"
]

markwon = [
  "markwon-core", "markwon-editor", "markwon-html",
  "markwon-imageCoil", "markwon-linkify", "markwon-syntaxHighlight",
  "markwon-ext-strikethrough", "markwon-ext-tables", "markwon-ext-tasklist"
]

[plugins]
android-gradle-application = { id = "com.android.application", version.ref = "android-gradle" }
android-gradle-library = { id = "com.android.library", version.ref = "android-gradle" }

buildProperties = "com.novoda.build-properties:0.4.1"

kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

firebase-crashlytics = "com.google.firebase.crashlytics:2.9.8"
firebase-perf = "com.google.firebase.firebase-perf:1.4.2"
googleServices = "com.google.gms.google-services:4.3.15"

gradleVersions = { id = "com.github.ben-manes.versions", version.ref = "gradle-versions" }

dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }

dependencyAnalysis = "com.autonomousapps.dependency-analysis:1.20.0"
