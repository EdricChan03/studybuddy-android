[versions]
aboutLibraries = "11.2.2"
accompanist = "0.34.0"
android-desugar = "2.0.4"
android-gradle = "8.7.0-alpha06"
androidx-activity = "1.9.1"
androidx-compose = "1.7.0-beta06"
androidx-compose-material3 = "1.3.0-beta05"
androidx-fragment = "1.8.2"
androidx-lifecycle = "2.8.4"
androidx-navigation = "2.8.0-beta06"
coil = "2.7.0"
# Used when resolving Markwon's CommonMark dependencies
commonmark = "0.21.0"
compose-richtext = "0.20.0"
dagger = "2.52"
deep-link-dispatch = "6.2.2"
firebase-bom = "32.8.1"
gradle-versions = "0.51.0"
kotest = "5.9.1"
kotlin = "2.0.0"
kotlinx-coroutines = "1.8.1"
kotlinx-serialization = "1.7.1"
ktor = "2.3.12"
markwon = "4.6.2"
mockk = "1.13.12"

[libraries]
# AndroidX dependencies
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-annotation = "androidx.annotation:annotation:1.8.2"
androidx-appcompat = "androidx.appcompat:appcompat:1.7.0"
androidx-browser = "androidx.browser:browser:1.8.0"
androidx-constraintlayout = "androidx.constraintlayout:constraintlayout:2.2.0-alpha13"
androidx-core-ktx = "androidx.core:core-ktx:1.13.1"
androidx-fragment-compose = { module = "androidx.fragment:fragment-compose", version.ref = "androidx-fragment" }
androidx-fragment-ktx = { module = "androidx.fragment:fragment-ktx", version.ref = "androidx-fragment" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-navigation-fragment-ktx = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidx-navigation" }
androidx-navigation-runtime-ktx = { module = "androidx.navigation:navigation-runtime-ktx", version.ref = "androidx-navigation" }
androidx-preference-ktx = "androidx.preference:preference-ktx:1.2.1"
androidx-recyclerview-core = "androidx.recyclerview:recyclerview:1.3.2"
androidx-recyclerview-selection = "androidx.recyclerview:recyclerview-selection:1.2.0-alpha01"
androidx-swiperefreshlayout = "androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01"
androidx-work-runtime-ktx = "androidx.work:work-runtime-ktx:2.10.0-alpha02"

# Jetpack Compose
androidx-compose-animation = { module = "androidx.compose.animation:animation", version.ref = "androidx-compose" }
androidx-compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "androidx-compose-material3" }
androidx-compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "androidx-compose" }
androidx-compose-ui = { module = "androidx.compose.ui:ui", version.ref = "androidx-compose" }
androidx-compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidx-compose" }
androidx-compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-compose" }
androidx-compose-ui-test-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-compose" }
androidx-compose-ui-test-manifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-compose" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }

androidxtra-browser-ktx = "io.github.edricchan03.androidx.browser:browser-ktx:0.2.0"

# Accompanist
accompanist-material3-themeAdapter = { module = "com.google.accompanist:accompanist-themeadapter-material3", version.ref = "accompanist" }
accompanist-drawablePainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }

# Other Compose dependencies
composeRichText-ui-material3 = { module = "com.halilibo.compose-richtext:richtext-ui-material3", version.ref = "compose-richtext" }
composeRichText-commonmark = { module = "com.halilibo.compose-richtext:richtext-commonmark", version.ref = "compose-richtext" }

# Other dependencies

materialComponents = "com.google.android.material:material:1.12.0"

# Credential Manager
google-identity-googleId = "com.google.android.libraries.identity.googleid:googleid:1.1.1"

# DeepLinkDispatcher
deepLinkDispatch-core = { module = "com.airbnb:deeplinkdispatch", version.ref = "deep-link-dispatch" }
deepLinkDispatch-processor = { module = "com.airbnb:deeplinkdispatch-processor", version.ref = "deep-link-dispatch" }

# Firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
# KTX artifacts have been merged into the main artifacts from Firebase BoM 32.4.0+
firebase-analytics-ktx = { module = "com.google.firebase:firebase-analytics" }
firebase-auth-ktx = { module = "com.google.firebase:firebase-auth" }
playServices-auth = "com.google.android.gms:play-services-auth:21.2.0"
firebase-crashlytics-ktx = { module = "com.google.firebase:firebase-crashlytics" }
firebase-dynamicLinks-ktx = { module = "com.google.firebase:firebase-dynamic-links" }
firebase-firestore-ktx = { module = "com.google.firebase:firebase-firestore" }
firebase-installations-ktx = { module = "com.google.firebase:firebase-installations" }
firebase-messaging-ktx = { module = "com.google.firebase:firebase-messaging" }
firebase-perf-ktx = { module = "com.google.firebase:firebase-perf" }

# Kotlin
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-playServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "kotlinx-coroutines" }
# Needed until Kotlin stdlib is automatically added into Android + Kotlin test-fixtures
# TODO: Remove when https://issuetracker.google.com/issues/340315591 is fixed
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }

# Markwon
markwon-core = { module = "io.noties.markwon:core", version.ref = "markwon" }
markwon-editor = { module = "io.noties.markwon:editor", version.ref = "markwon" }
markwon-html = { module = "io.noties.markwon:html", version.ref = "markwon" }
markwon-imageCoil = { module = "io.noties.markwon:image-coil", version.ref = "markwon" }
markwon-linkify = { module = "io.noties.markwon:linkify", version.ref = "markwon" }
markwon-syntaxHighlight = { module = "io.noties.markwon:syntax-highlight", version.ref = "markwon" }
markwon-ext-strikethrough = { module = "io.noties.markwon:ext-strikethrough", version.ref = "markwon" }
markwon-ext-tables = { module = "io.noties.markwon:ext-tables", version.ref = "markwon" }
markwon-ext-tasklist = { module = "io.noties.markwon:ext-tasklist", version.ref = "markwon" }

# I/O Dependencies

# Coil
coil = { module = "io.coil-kt:coil", version.ref = "coil" }

# Ktor
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }

# kotlinx-serialization
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }

# Miscellaneous

materialAbout = "com.github.daniel-stoneuk:material-about-library:3.2.0-rc01"
aboutLibraries = { module = "com.mikepenz:aboutlibraries", version.ref = "aboutLibraries" }
aboutLibraries-compose-material3 = { module = "com.mikepenz:aboutlibraries-compose-m3", version.ref = "aboutLibraries" }
# TODO: Switch to an in-house updater
appUpdater = "com.github.AleP04:AppUpdater:2.7.2"
migration = "io.github.boswelja.migration:migration-core:2.1.4"

# Gradle Versions (declared here as a library and not as a plugin
# such that it can be used in a custom reporter)
gradleVersions-gradle = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradle-versions" }

# AGP (as a library such that it can be used in precompiled scripts)
android-gradle-library = { module = "com.android.library:com.android.library.gradle.plugin", version.ref = "android-gradle" }

# Kotlin Gradle plugin
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-composeCompiler-gradle = { module = "org.jetbrains.kotlin:compose-compiler-gradle-plugin", version.ref = "kotlin" }

# Testing dependencies
androidx-test-espresso-core = "androidx.test.espresso:espresso-core:3.6.1"
androidx-test-core = "androidx.test:core:1.6.1"
androidx-test-ext-junit = "androidx.test.ext:junit:1.2.1"
androidx-test-runner = "androidx.test:runner:1.6.1"
androidx-test-rules = "androidx.test:rules:1.6.1"
junit = "junit:junit:4.13.2"
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
mockito-core = "org.mockito:mockito-core:5.12.0"
mockk-core = { module = "io.mockk:mockk", version.ref = "mockk" }

kotest-assertion-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
kotest-runner-junit5 = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest" }

# DI dependencies
dagger-hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
dagger-hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "dagger" }

android-desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugar" }
android-desugar-nio = { module = "com.android.tools:desugar_jdk_libs_nio", version.ref = "android-desugar" }

[bundles]
androidx-compose = [
  "androidx-compose-animation",
  "androidx-compose-foundation",
  "androidx-compose-ui",
  "androidx-compose-ui-tooling-preview",
  "androidx-compose-material3"
]

androidx-compose-tooling = [
  "androidx-compose-ui-test-manifest",
  "androidx-compose-ui-tooling"
]

androidx-test = [
  "androidx-test-espresso-core", "androidx-test-core",
  "androidx-test-runner", "androidx-test-rules"
]

firebase = [
  "firebase-analytics-ktx", "firebase-auth-ktx", "playServices-auth",
  "firebase-crashlytics-ktx", "firebase-dynamicLinks-ktx", "firebase-firestore-ktx",
  "firebase-installations-ktx", "firebase-messaging-ktx", "firebase-perf-ktx"
]

ktor = [
  "ktor-client-core", "ktor-client-content-negotiation", "ktor-client-okhttp",
  "ktor-serialization-kotlinx-json"
]

markwon = [
  "markwon-core", "markwon-editor", "markwon-html",
  "markwon-imageCoil", "markwon-linkify", "markwon-syntaxHighlight",
  "markwon-ext-strikethrough", "markwon-ext-tables", "markwon-ext-tasklist"
]

[plugins]
android-gradle-application = { id = "com.android.application", version.ref = "android-gradle" }
android-gradle-library = { id = "com.android.library", version.ref = "android-gradle" }

buildProperties = "com.novoda.build-properties:0.4.1"

kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-plugin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

ksp = "com.google.devtools.ksp:2.0.0-1.0.24"

firebase-crashlytics = "com.google.firebase.crashlytics:3.0.2"
firebase-perf = "com.google.firebase.firebase-perf:1.4.2"
googleServices = "com.google.gms.google-services:4.4.2"

gradleVersions = { id = "com.github.ben-manes.versions", version.ref = "gradle-versions" }

dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }

aboutLibraries = { id = "com.mikepenz.aboutlibraries.plugin", version.ref = "aboutLibraries" }

dependencyAnalysis = "com.autonomousapps.dependency-analysis:1.33.0"

testAggregation-results = "io.github.gmazzo.test.aggregation.results:2.2.1"
