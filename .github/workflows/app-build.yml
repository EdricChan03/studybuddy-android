name: App build

on: [ push ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        app-build-types: [debug, nightly, release]

    name: Build app (${{ matrix.app-build-types }})

    steps:
      - uses: actions/checkout@v3
      - name: Capitalise build type
        id: capitalise-build-type
        # See https://linuxhint.com/bash_lowercase_uppercase_strings/
        run: |
          build_type="${{ matrix.app-build-types }}"
          echo "::set-output name=build-type::${build_type^}"
      - name: Build app
        uses: ./.github/actions/build-gradle
        with:
          gradle-arguments: :app:assemble${{ steps.capitalise-build-type.outputs.build-type }}
          upload-name: app-${{ matrix.app-build-types }}.apk
          upload-path: app/build/outputs/apk/${{ matrix.app-build-types }}/app-${{ matrix.app-build-types }}.apk
          transcrypt-cipher: ${{ secrets.TRANSCRYPT_CIPHER }}
          transcrypt-password: ${{ secrets.TRANSCRYPT_PASSWORD }}
          app-keystore-password: ${{ secrets.APP_KEYSTORE_PASSWORD }}
          app-keystore-alias: ${{ secrets.APP_KEYSTORE_ALIAS }}
          app-keystore-alias-password: ${{ secrets.APP_KEYSTORE_ALIAS_PASSWORD }}

  dependencies:
    name: Check for dependency updates
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Run dependencyUpdates task
        uses: ./.github/actions/build-gradle
        with:
          gradle-arguments: dependencyUpdates
          upload-name: dependency-updates
          # Dependency update info is available at build/dependencyUpdates/report.<filetype>
          upload-path: build/dependencyUpdates/
          app-keystore-password: ${{ secrets.APP_KEYSTORE_PASSWORD }}
          app-keystore-alias: ${{ secrets.APP_KEYSTORE_ALIAS }}
          app-keystore-alias-password: ${{ secrets.APP_KEYSTORE_ALIAS_PASSWORD }}
      - name: Generate dependency updates summary
        id: parse_dep_updates
        run: |
          report_file="build/dependencyUpdates/report.json"
          dep_update_types=("current" "exceeded" "outdated" "unresolved" "undeclared")
          dep_update_summary="Dependencies found:"
          for dep in "${dep_update_types[@]}"
          do
            dep_update_summary+="\n- $(jq -r --arg dep "$dep" '.[$dep].count' $report_file) $dep dependencies"
          done
          echo "::set-output name=summary::$dep_update_summary"
      - name: Add GitHub check to commit
        uses: LouisBrunner/checks-action@v1.2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: Dependency updates report
          conclusion: ${{ job.status }}
          output: |
            {"summary": ${{ steps.parse_dep_updates.outputs.summary }}}
          output_text_description_file: build/dependencyUpdates/report.txt
